{
 "Description": "Open Data - Storage infrastructure (S3, DynamoDB)",
 "Resources": {
  "ParametersSenadoBaseUrlE24FBCFA": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Base URL for Senate website",
    "Name": "/odm/dev/senado/base-url",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "https://www.senado.cl"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/SenadoBaseUrl/Resource"
   }
  },
  "ParametersCamaraBaseUrlD40F34FA": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Base URL for Chamber of Deputies website",
    "Name": "/odm/dev/camara/base-url",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "https://www.camara.cl"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/CamaraBaseUrl/Resource"
   }
  },
  "ParametersServelBaseUrl71863A65": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Base URL for SERVEL website",
    "Name": "/odm/dev/servel/base-url",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "https://www.servel.cl"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/ServelBaseUrl/Resource"
   }
  },
  "ParametersExtractionBatchSize217F1ADB": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Batch size for data extraction",
    "Name": "/odm/dev/extraction/batch-size",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "100"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/ExtractionBatchSize/Resource"
   }
  },
  "ParametersExtractionRetryAttemptsEA9C1441": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Number of retry attempts for failed extractions",
    "Name": "/odm/dev/extraction/retry-attempts",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "3"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/ExtractionRetryAttempts/Resource"
   }
  },
  "ParametersExtractionTimeoutA3A31AC1": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Timeout for extraction requests in milliseconds",
    "Name": "/odm/dev/extraction/timeout",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "30000"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/ExtractionTimeout/Resource"
   }
  },
  "ParametersAnalyticsThresholds363915C8": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Thresholds for problematic behavior detection",
    "Name": "/odm/dev/analytics/thresholds",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "{\"excessiveAbsence\":0.2,\"passiveAttendance\":0.3,\"excessiveSpending\":2,\"inconsistentVoting\":0.4}"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/AnalyticsThresholds/Resource"
   }
  },
  "ParametersBedrockModelId562F75E3": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Bedrock model ID for AI analysis",
    "Name": "/odm/dev/ai/bedrock-model-id",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "anthropic.claude-3-5-sonnet-20241022-v2:0"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/BedrockModelId/Resource"
   }
  },
  "ParametersAIAnalysisPrompts827A92B8": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "AI prompts for different analysis types",
    "Name": "/odm/dev/ai/analysis-prompts",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "{\"behaviorAnalyst\":\"Eres un analista especializado en transparencia legislativa chilena.\\nAnaliza los datos proporcionados para identificar comportamientos problemáticos:\\n- Inasistencias injustificadas superiores al promedio\\n- Participación pasiva (asiste pero no vota)\\n- Gastos excesivos comparados con pares\\n- Inconsistencias entre promesas y votaciones\\n\\nProporciona análisis objetivo, basado en datos, con contexto histórico.\\nFormato de respuesta: JSON con campos 'tipo', 'severidad', 'evidencia', 'recomendacion'.\",\"reportGenerator\":\"Eres un periodista especializado en política chilena.\\nGenera reportes mensuales claros y accesibles para ciudadanos sobre:\\n- Resumen ejecutivo del período\\n- Comportamientos destacados (positivos y negativos)\\n- Comparaciones históricas\\n- Impacto en proyectos de ley relevantes\\n\\nUsa lenguaje claro, evita tecnicismos, incluye contexto político relevante.\",\"trendDetector\":\"Eres un analista de datos especializado en tendencias políticas.\\nIdentifica patrones emergentes en datos legislativos:\\n- Cambios en patrones de votación\\n- Tendencias de asistencia por partido\\n- Evolución de gastos parlamentarios\\n- Correlaciones entre eventos políticos y comportamiento\\n\\nProporciona insights predictivos con nivel de confianza.\"}"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/AIAnalysisPrompts/Resource"
   }
  },
  "ParametersApiRateLimits65BF9EC0": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "API rate limits by user type",
    "Name": "/odm/dev/api/rate-limits",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "{\"free\":{\"requests\":1000,\"period\":\"day\"},\"premium\":{\"requests\":10000,\"period\":\"day\"},\"developer\":{\"requests\":50000,\"period\":\"day\"}}"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/ApiRateLimits/Resource"
   }
  },
  "ParametersNotificationSettingsC8933B16": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Notification system settings",
    "Name": "/odm/dev/notifications/settings",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "{\"emailFrom\":\"noreply@opendata.cl\",\"webhookTimeout\":5000,\"retryAttempts\":3}"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/NotificationSettings/Resource"
   }
  },
  "ParametersDataRetentionPolicies6BFD0753": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Data retention policies in days",
    "Name": "/odm/dev/data/retention-policies",
    "Tags": {
     "Environment": "dev",
     "ManagedBy": "CDK",
     "Project": "OpenDataMotivation"
    },
    "Type": "String",
    "Value": "{\"rawData\":{\"days\":365},\"processedData\":{\"days\":1095},\"analyticsData\":{\"days\":730},\"userSessions\":{\"days\":30}}"
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Parameters/DataRetentionPolicies/Resource"
   }
  },
  "DataBucketE3889A50": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "open-data-bucket-dev",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "MaxAge": 3000
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 7
       },
       "Id": "raw-data-lifecycle",
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 90
       },
       "NoncurrentVersionTransitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        }
       ],
       "Prefix": "raw/",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        },
        {
         "StorageClass": "GLACIER",
         "TransitionInDays": 90
        },
        {
         "StorageClass": "DEEP_ARCHIVE",
         "TransitionInDays": 365
        }
       ]
      },
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 7
       },
       "Id": "processed-data-lifecycle",
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 180
       },
       "NoncurrentVersionTransitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        }
       ],
       "Prefix": "processed/",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 90
        },
        {
         "StorageClass": "GLACIER",
         "TransitionInDays": 365
        }
       ]
      },
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 1
       },
       "ExpirationInDays": 30,
       "Id": "athena-results-cleanup",
       "Prefix": "athena-results/",
       "Status": "Enabled"
      },
      {
       "AbortIncompleteMultipartUpload": {
        "DaysAfterInitiation": 1
       },
       "ExpirationInDays": 7,
       "Id": "temp-data-cleanup",
       "Prefix": "temp/",
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/DataBucket/Resource"
   }
  },
  "DataBucketPolicy3231C704": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "DataBucketE3889A50"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ],
       "Sid": "DenyInsecureConnections"
      },
      {
       "Action": "s3:PutObject",
       "Condition": {
        "StringNotEquals": {
         "s3:x-amz-server-side-encryption": "AES256"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "DataBucketE3889A50",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       },
       "Sid": "DenyUnencryptedObjectUploads"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/DataBucket/Policy/Resource"
   }
  },
  "DataBucketAutoDeleteObjectsCustomResource9FB51BF3": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "DataBucketE3889A50"
    }
   },
   "DependsOn": [
    "DataBucketPolicy3231C704"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/DataBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "DataBucketE3889A50"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "S3InitializerFunctionServiceRole4B8344C9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerFunction/ServiceRole/Resource"
   }
  },
  "S3InitializerFunctionServiceRoleDefaultPolicyDA8A3984": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataBucketE3889A50",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataBucketE3889A50",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "S3InitializerFunctionServiceRoleDefaultPolicyDA8A3984",
    "Roles": [
     {
      "Ref": "S3InitializerFunctionServiceRole4B8344C9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "S3InitializerFunction45CFB7CF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n        const { S3Client, PutObjectCommand } = require('@aws-sdk/client-s3');\n\n        const s3Client = new S3Client({ region: process.env.AWS_REGION });\n\n        exports.handler = async (event) => {\n          console.log('Initializing S3 folder structure', JSON.stringify(event, null, 2));\n\n          const bucketName = process.env.BUCKET_NAME;\n          const folders = [\n            // Raw data structure\n            'raw/senado/legisladores/',\n            'raw/senado/sesiones/',\n            'raw/senado/votaciones/',\n            'raw/senado/proyectos/',\n            'raw/senado/gastos/',\n            'raw/camara/legisladores/',\n            'raw/camara/sesiones/',\n            'raw/camara/votaciones/',\n            'raw/camara/proyectos/',\n            'raw/camara/gastos/',\n            'raw/servel/elecciones/',\n            'raw/servel/candidatos/',\n            'raw/servel/resultados/',\n\n            // Processed data structure\n            'processed/senado/legisladores/',\n            'processed/senado/sesiones/',\n            'processed/senado/votaciones/',\n            'processed/senado/proyectos/',\n            'processed/senado/gastos/',\n            'processed/camara/legisladores/',\n            'processed/camara/sesiones/',\n            'processed/camara/votaciones/',\n            'processed/camara/proyectos/',\n            'processed/camara/gastos/',\n            'processed/servel/elecciones/',\n            'processed/analisis/comportamientos_problematicos/',\n            'processed/analisis/metricas_rendimiento/',\n            'processed/analisis/reportes_ia/',\n\n            // Utility folders\n            'athena-results/',\n            'temp/',\n            'inventory/',\n            'logs/',\n          ];\n\n          try {\n            for (const folder of folders) {\n              const command = new PutObjectCommand({\n                Bucket: bucketName,\n                Key: folder + '.gitkeep',\n                Body: 'This file maintains the folder structure',\n                ContentType: 'text/plain',\n                ServerSideEncryption: 'AES256',\n              });\n\n              await s3Client.send(command);\n              console.log(`Created folder: ${folder}`);\n            }\n\n            return {\n              statusCode: 200,\n              body: JSON.stringify({\n                message: 'S3 folder structure initialized successfully',\n                foldersCreated: folders.length,\n              }),\n            };\n          } catch (error) {\n            console.error('Error initializing S3 structure:', error);\n            throw error;\n          }\n        };\n      "
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "DataBucketE3889A50"
      }
     }
    },
    "FunctionName": "odm-dev-s3-initializer",
    "Handler": "index.handler",
    "LoggingConfig": {
     "LogFormat": "JSON"
    },
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "S3InitializerFunctionServiceRole4B8344C9",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "S3InitializerFunctionServiceRoleDefaultPolicyDA8A3984",
    "S3InitializerFunctionServiceRole4B8344C9"
   ],
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerFunction/Resource"
   }
  },
  "S3InitializerProviderframeworkonEventServiceRole077225C8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "S3InitializerProviderframeworkonEventServiceRoleDefaultPolicy37EC78A2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "S3InitializerFunction45CFB7CF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "S3InitializerFunction45CFB7CF",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:GetFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "S3InitializerFunction45CFB7CF",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "S3InitializerProviderframeworkonEventServiceRoleDefaultPolicy37EC78A2",
    "Roles": [
     {
      "Ref": "S3InitializerProviderframeworkonEventServiceRole077225C8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "S3InitializerProviderframeworkonEvent98BE427E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (ODM-dev-Storage/S3InitializerProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "S3InitializerFunction45CFB7CF",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "LoggingConfig": {
     "ApplicationLogLevel": "FATAL",
     "LogFormat": "JSON"
    },
    "Role": {
     "Fn::GetAtt": [
      "S3InitializerProviderframeworkonEventServiceRole077225C8",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "S3InitializerProviderframeworkonEventServiceRoleDefaultPolicy37EC78A2",
    "S3InitializerProviderframeworkonEventServiceRole077225C8"
   ],
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.bdc104ed9cab1b5b6421713c8155f0b753380595356f710400609664d3635eca",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "S3InitializerResource": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "S3InitializerProviderframeworkonEvent98BE427E",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "DataBucketE3889A50"
    },
    "Timestamp": 1753996984992
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/S3InitializerResource/Default"
   }
  },
  "LegislatorsTableB64B4C2F": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "chamber",
      "AttributeType": "S"
     },
     {
      "AttributeName": "region",
      "AttributeType": "S"
     },
     {
      "AttributeName": "party",
      "AttributeType": "S"
     },
     {
      "AttributeName": "status",
      "AttributeType": "S"
     },
     {
      "AttributeName": "period",
      "AttributeType": "S"
     },
     {
      "AttributeName": "performanceScore",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": false
    },
    "DeletionProtectionEnabled": false,
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "ChamberRegionIndex",
      "KeySchema": [
       {
        "AttributeName": "chamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "region",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "PartyIndex",
      "KeySchema": [
       {
        "AttributeName": "party",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "chamber",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "StatusPeriodIndex",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "period",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "PerformanceIndex",
      "KeySchema": [
       {
        "AttributeName": "chamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "performanceScore",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "name",
        "party",
        "region",
        "lastUpdated"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": false
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableClass": "STANDARD",
    "TableName": "ODM-dev-Legislators",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/LegislatorsTable/Resource"
   }
  },
  "SessionsTable7C302024": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "date",
      "AttributeType": "S"
     },
     {
      "AttributeName": "chamber",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sessionType",
      "AttributeType": "S"
     },
     {
      "AttributeName": "period",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": false
    },
    "DeletionProtectionEnabled": false,
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "DateChamberIndex",
      "KeySchema": [
       {
        "AttributeName": "date",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "chamber",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "ChamberDateIndex",
      "KeySchema": [
       {
        "AttributeName": "chamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "date",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "TypeDateIndex",
      "KeySchema": [
       {
        "AttributeName": "sessionType",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "date",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "PeriodIndex",
      "KeySchema": [
       {
        "AttributeName": "period",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "date",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "chamber",
        "sessionType",
        "quorum",
        "attendanceCount"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": false
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableClass": "STANDARD",
    "TableName": "ODM-dev-Sessions",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/SessionsTable/Resource"
   }
  },
  "AnalyticsTable3F84C304": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "analyticsType",
      "AttributeType": "S"
     },
     {
      "AttributeName": "period",
      "AttributeType": "S"
     },
     {
      "AttributeName": "legislatorId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "chamber",
      "AttributeType": "S"
     },
     {
      "AttributeName": "calculatedAt",
      "AttributeType": "S"
     },
     {
      "AttributeName": "rankingType",
      "AttributeType": "S"
     },
     {
      "AttributeName": "score",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": false
    },
    "DeletionProtectionEnabled": false,
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "TypePeriodIndex",
      "KeySchema": [
       {
        "AttributeName": "analyticsType",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "period",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "LegislatorTypeIndex",
      "KeySchema": [
       {
        "AttributeName": "legislatorId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "analyticsType",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "ChamberCalculatedIndex",
      "KeySchema": [
       {
        "AttributeName": "chamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "calculatedAt",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "analyticsType",
        "period",
        "legislatorId",
        "data"
       ],
       "ProjectionType": "INCLUDE"
      }
     },
     {
      "IndexName": "RankingIndex",
      "KeySchema": [
       {
        "AttributeName": "rankingType",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "score",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "legislatorId",
        "chamber",
        "period",
        "rank"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableClass": "STANDARD",
    "TableName": "ODM-dev-Analytics",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/AnalyticsTable/Resource"
   }
  },
  "VotationsTable0ADA7A3E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "projectId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "votingDate",
      "AttributeType": "S"
     },
     {
      "AttributeName": "legislatorId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "chamber",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": false
    },
    "DeletionProtectionEnabled": false,
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "ProjectDateIndex",
      "KeySchema": [
       {
        "AttributeName": "projectId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "votingDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "LegislatorDateIndex",
      "KeySchema": [
       {
        "AttributeName": "legislatorId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "votingDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "ChamberVotingDateIndex",
      "KeySchema": [
       {
        "AttributeName": "chamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "votingDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "projectId",
        "votingType",
        "result",
        "legislatorId",
        "vote"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": false
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableClass": "STANDARD",
    "TableName": "ODM-dev-Votations",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/VotationsTable/Resource"
   }
  },
  "ProjectsTableAA0A2089": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "status",
      "AttributeType": "S"
     },
     {
      "AttributeName": "lastUpdated",
      "AttributeType": "S"
     },
     {
      "AttributeName": "originChamber",
      "AttributeType": "S"
     },
     {
      "AttributeName": "submissionDate",
      "AttributeType": "S"
     },
     {
      "AttributeName": "urgency",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": false
    },
    "DeletionProtectionEnabled": false,
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "StatusDateIndex",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "lastUpdated",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "OriginChamberIndex",
      "KeySchema": [
       {
        "AttributeName": "originChamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "submissionDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "UrgencyDateIndex",
      "KeySchema": [
       {
        "AttributeName": "urgency",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "submissionDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "title",
        "status",
        "originChamber",
        "currentStage"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": false
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableClass": "STANDARD",
    "TableName": "ODM-dev-Projects",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/ProjectsTable/Resource"
   }
  },
  "ExpensesTableD91D50C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "legislatorId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "expenseDate",
      "AttributeType": "S"
     },
     {
      "AttributeName": "category",
      "AttributeType": "S"
     },
     {
      "AttributeName": "chamber",
      "AttributeType": "S"
     },
     {
      "AttributeName": "amount",
      "AttributeType": "N"
     },
     {
      "AttributeName": "period",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "ContributorInsightsSpecification": {
     "Enabled": false
    },
    "DeletionProtectionEnabled": false,
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "LegislatorDateIndex",
      "KeySchema": [
       {
        "AttributeName": "legislatorId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "expenseDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "CategoryDateIndex",
      "KeySchema": [
       {
        "AttributeName": "category",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "expenseDate",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "ChamberAmountIndex",
      "KeySchema": [
       {
        "AttributeName": "chamber",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "amount",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "legislatorId",
        "category",
        "expenseDate",
        "description"
       ],
       "ProjectionType": "INCLUDE"
      }
     },
     {
      "IndexName": "PeriodAmountIndex",
      "KeySchema": [
       {
        "AttributeName": "period",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "amount",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "legislatorId",
        "chamber",
        "category"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": false
    },
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableClass": "STANDARD",
    "TableName": "ODM-dev-Expenses",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Project",
      "Value": "OpenDataMotivation"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/ExpensesTable/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOQY/CIBCFf4t3Oqvdg+fVZK/bVO/NFLDBFjAMaAzhv28otcbT+94M7w011Ns9bDf4oIqLsZpUD/HkkY8MH9RFIp29U2Zo0KGWXjp2vJjVJEbfEA+Bj9LnxUJFGjsp/nyPF1/MAUkmNqHuBUL8DYZ7ZU1+/OLEFGqIrZ1kHs/6riyU73dIJD3BTxYmnga1FT3EM/YlOUNK7BjIW91KssHx0rnyx6px9q6EdPmPbK49eRyUGdga4HOgc4sneGVy7V/wt+ATM1ZIuNLXva5ht4fd5kpKVS4Yr7SEtug/O0h2woQBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ODM-dev-Storage/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "DataBucketName": {
   "Description": "S3 bucket for raw and processed data",
   "Value": {
    "Ref": "DataBucketE3889A50"
   },
   "Export": {
    "Name": "ODM-dev-DataBucketName"
   }
  },
  "LegislatorsTableName": {
   "Description": "DynamoDB table for legislators data",
   "Value": {
    "Ref": "LegislatorsTableB64B4C2F"
   },
   "Export": {
    "Name": "ODM-dev-LegislatorsTableName"
   }
  },
  "SessionsTableName": {
   "Description": "DynamoDB table for sessions data",
   "Value": {
    "Ref": "SessionsTable7C302024"
   },
   "Export": {
    "Name": "ODM-dev-SessionsTableName"
   }
  },
  "AnalyticsTableName": {
   "Description": "DynamoDB table for analytics data",
   "Value": {
    "Ref": "AnalyticsTable3F84C304"
   },
   "Export": {
    "Name": "ODM-dev-AnalyticsTableName"
   }
  },
  "VotationsTableName": {
   "Description": "DynamoDB table for voting records",
   "Value": {
    "Ref": "VotationsTable0ADA7A3E"
   },
   "Export": {
    "Name": "ODM-dev-VotationsTableName"
   }
  },
  "ProjectsTableName": {
   "Description": "DynamoDB table for legislative projects",
   "Value": {
    "Ref": "ProjectsTableAA0A2089"
   },
   "Export": {
    "Name": "ODM-dev-ProjectsTableName"
   }
  },
  "ExpensesTableName": {
   "Description": "DynamoDB table for parliamentary expenses",
   "Value": {
    "Ref": "ExpensesTableD91D50C8"
   },
   "Export": {
    "Name": "ODM-dev-ExpensesTableName"
   }
  },
  "ExportsOutputFnGetAttDataBucketE3889A50Arn98F8399F": {
   "Value": {
    "Fn::GetAtt": [
     "DataBucketE3889A50",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttDataBucketE3889A50Arn98F8399F"
   }
  },
  "ExportsOutputFnGetAttLegislatorsTableB64B4C2FArn7C089D9E": {
   "Value": {
    "Fn::GetAtt": [
     "LegislatorsTableB64B4C2F",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttLegislatorsTableB64B4C2FArn7C089D9E"
   }
  },
  "ExportsOutputFnGetAttSessionsTable7C302024Arn24FF8012": {
   "Value": {
    "Fn::GetAtt": [
     "SessionsTable7C302024",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttSessionsTable7C302024Arn24FF8012"
   }
  },
  "ExportsOutputFnGetAttAnalyticsTable3F84C304ArnFD90B42F": {
   "Value": {
    "Fn::GetAtt": [
     "AnalyticsTable3F84C304",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttAnalyticsTable3F84C304ArnFD90B42F"
   }
  },
  "ExportsOutputFnGetAttVotationsTable0ADA7A3EArnE50C174C": {
   "Value": {
    "Fn::GetAtt": [
     "VotationsTable0ADA7A3E",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttVotationsTable0ADA7A3EArnE50C174C"
   }
  },
  "ExportsOutputFnGetAttProjectsTableAA0A2089ArnA2260F04": {
   "Value": {
    "Fn::GetAtt": [
     "ProjectsTableAA0A2089",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttProjectsTableAA0A2089ArnA2260F04"
   }
  },
  "ExportsOutputFnGetAttExpensesTableD91D50C8Arn1CEBEA73": {
   "Value": {
    "Fn::GetAtt": [
     "ExpensesTableD91D50C8",
     "Arn"
    ]
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputFnGetAttExpensesTableD91D50C8Arn1CEBEA73"
   }
  },
  "ExportsOutputRefDataBucketE3889A50250F5285": {
   "Value": {
    "Ref": "DataBucketE3889A50"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefDataBucketE3889A50250F5285"
   }
  },
  "ExportsOutputRefLegislatorsTableB64B4C2F4EEFB501": {
   "Value": {
    "Ref": "LegislatorsTableB64B4C2F"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefLegislatorsTableB64B4C2F4EEFB501"
   }
  },
  "ExportsOutputRefSessionsTable7C3020246E1CCFDD": {
   "Value": {
    "Ref": "SessionsTable7C302024"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefSessionsTable7C3020246E1CCFDD"
   }
  },
  "ExportsOutputRefAnalyticsTable3F84C30437863EDE": {
   "Value": {
    "Ref": "AnalyticsTable3F84C304"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefAnalyticsTable3F84C30437863EDE"
   }
  },
  "ExportsOutputRefVotationsTable0ADA7A3E0D2281F4": {
   "Value": {
    "Ref": "VotationsTable0ADA7A3E"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefVotationsTable0ADA7A3E0D2281F4"
   }
  },
  "ExportsOutputRefProjectsTableAA0A2089BD3C4802": {
   "Value": {
    "Ref": "ProjectsTableAA0A2089"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefProjectsTableAA0A2089BD3C4802"
   }
  },
  "ExportsOutputRefExpensesTableD91D50C88F55E2CD": {
   "Value": {
    "Ref": "ExpensesTableD91D50C8"
   },
   "Export": {
    "Name": "ODM-dev-Storage:ExportsOutputRefExpensesTableD91D50C88F55E2CD"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}