{
  "QueryLanguage": "JSONata",
  "Comment": "Extracci√≥n de Senadores a partir de mensajes SQS con slugs de senadores",
  "StartAt": "Extract parSlugs",
  "States": {
    "Extract parSlugs": {
      "Type": "Pass",
      "Next": "Foreach parSlug",
      "Output": "{% $states.input.body[] %}"
    },
    "Foreach parSlug": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Assign parSlug",
        "States": {
          "Assign parSlug": {
            "Type": "Pass",
            "Assign": {
              "parSlug": "{% $states.input %}"
            },
            "Next": "Get Parlamentario"
          },
          "Get Parlamentario": {
            "Type": "Task",
            "Resource": "arn:aws:states:::http:invoke",
            "Arguments": {
              "ApiEndpoint": "{% 'https://www.senado.cl/senadoras-y-senadores/listado-de-senadoras-y-senadores/' & $parSlug %}",
              "Method": "GET",
              "InvocationConfig": {
                "ConnectionArn": "${events_connection_arn}"
              }
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "BackoffRate": 2,
                "IntervalSeconds": 1,
                "MaxAttempts": 3,
                "JitterStrategy": "FULL"
              }
            ],
            "Output": {
              "senData": "{% $parse( $match($states.result.ResponseBody, /<script id=\"__NEXT_DATA__\" type=\"application\\/json\">([\\s\\S]*?)<\\/script>/).groups[0] ) %}"
            },
            "Next": "Parallel"
          },
          "Parallel": {
            "Type": "Parallel",
            "Branches": [
              {
                "StartAt": "Transform Parlamentario",
                "States": {
                  "Transform Parlamentario": {
                    "Type": "Pass",
                    "Output": "{% $states.input.senData.props.pageProps.resource.data.parliamentarianSenadoData.{\n    \"id\": { \n        \"N\": data[0].ID_PARLAMENTARIO ~> $string \n    },\n    \"uuid\": {\n        \"S\": data[0].UUID\n    },\n    \"slug\": {\n        \"S\": data[0].SLUG\n    },\n    \"nombreCompleto\": {\n        \"S\": data[0].NOMBRE_COMPLETO\n    },\n    \"nombre\": {\n        \"S\": data[0].NOMBRE\n    },\n    \"apellidoPaterno\": {\n        \"S\": data[0].APELLIDO_PATERNO\n    },\n    \"apellidoMaterno\": {\n        \"S\": data[0].APELLIDO_MATERNO\n    },\n    \"camara\": {\n        \"S\": data[0].CAMARA\n    },\n    \"partido\": {\n        \"M\": {\n            \"id\": {\n                \"N\": data[0].PARTIDO_ID ~> $string\n            },\n            \"nombre\": {\n                \"S\": data[0].PARTIDO\n            }\n        }\n    },\n    \"circunscripcionId\": {\n        \"N\": data[0].CIRCUNSCRIPCION_ID ~> $string\n    },\n    \"region\": {\n        \"M\": {\n            \"id\": {\n                \"N\": data[0].REGION_ID ~> $string\n            },\n            \"nombre\": {\n                \"S\": data[0].REGION\n            }\n        }\n    },\n    \"comite\": $exists(data[0].COMITE) ? {\n        \"M\": {\n            \"id\": {\n                \"N\": data[0].COMITE.ID ~> $string\n            },\n            \"uuid\": {\n                \"S\": data[0].COMITE.UUID\n            },\n            \"nombre\": {\n                \"S\": data[0].COMITE.NOMBRE\n            },\n            \"abreviatura\": {\n                \"S\": data[0].COMITE.ABREVIATURA\n            }\n        }\n    } : undefined,\n    \"fono\": {\n        \"S\": data[0].FONO\n    },\n    \"email\": {\n        \"S\": data[0].EMAIL\n    },\n    \"sexo\": {\n        \"M\": {\n            \"valor\": {\n                \"N\": data[0].SEXO ~> $string\n            },\n            \"etiqueta\": {\n                \"S\": data[0].SEXO_ETIQUETA\n            },\n            \"etiquetaAbreviatura\": {\n                \"S\": data[0].SEXO_ETIQUETA_ABREVIATURA\n            }\n        }\n    },\n    \"periodos\": {\n        \"L\": data[0].PERIODOS[].{\n            \"M\": {\n                \"id\": {\n                    \"N\": ID ~> $string\n                },\n                \"uuid\": UUID != 0 ? {\n                    \"S\": UUID\n                } : undefined,\n                \"camara\": {\n                    \"S\": CAMARA\n                },\n                \"desde\": {\n                    \"S\": DESDE\n                },\n                \"hasta\": {\n                    \"S\": HASTA\n                },\n                \"vigente\": {\n                    \"BOOL\": VIGENTE = 1\n                }\n            }\n        }\n    },\n    \"imagenes\": {\n        \"M\": {\n            \"DEFAULT\": $exists(data[0].IMAGEN) ? {\n                \"S\": data[0].IMAGEN\n            } : undefined,\n            \"120\": $exists(data[0].IMAGEN_120) ? {\n                \"S\": data[0].IMAGEN_120\n            } : undefined,\n            \"450\": $exists(data[0].IMAGEN_450) ? {\n                \"S\": data[0].IMAGEN_450\n            } : undefined,\n            \"600\": $exists(data[0].IMAGEN_600) ? {\n                \"S\": data[0].IMAGEN_600\n            } : undefined\n        }\n    },\n    \"cargos\": $exists(CARGOS.data) ? {\n        \"L\": CARGOS.data[].{\n            \"M\": {\n                \"cargo\": {\n                    \"S\": CARGO\n                },\n                \"inicio\": {\n                    \"S\": INICIO\n                },\n                \"termino\": TERMINO != null ? {\n                    \"S\": TERMINO\n                } : undefined\n            }\n        }\n    } : undefined,\n    \"enlaces\": {\n        \"M\": {\n            \"facebookPagina\": ENLACES[0].FACEBOOK_PAGE != null ? {\n                \"S\": ENLACES[0].FACEBOOK_PAGE\n            } : undefined,\n            \"facebookCuenta\": ENLACES[0].FACEBOOK_CUENTA != null ? {\n                \"S\": ENLACES[0].FACEBOOK_CUENTA\n            } : undefined,\n            \"twitter\": ENLACES[0].TWITTER != null ? {\n                \"S\": ENLACES[0].TWITTER\n            } : undefined,\n            \"webPersonal\": ENLACES[0].WEB_PERSONAL != null ? {\n                \"S\": ENLACES[0].WEB_PERSONAL\n            } : undefined,\n            \"instagram\": ENLACES[0].INSTAGRAM != null ? {\n                \"S\": ENLACES[0].INSTAGRAM\n            } : undefined,\n            \"linkedin\": ENLACES[0].LINKEDIN != null ? {\n                \"S\": ENLACES[0].LINKEDIN\n            } : undefined,\n            \"flickr\": ENLACES[0].FLICKR != null ? {\n                \"S\": ENLACES[0].FLICKR\n            } : undefined\n        }\n    }\n} %}",
                    "Next": "DynamoDB UpdateItem"
                  },
                  "DynamoDB UpdateItem": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::dynamodb:updateItem",
                    "Arguments": {
                      "TableName": "${parlamentarios_table_name}",
                      "Key": {
                        "slug": {
                          "S": "{% $parSlug %}"
                        }
                      },
                      "UpdateExpression": "SET fechaModificacion = :fechaModificacion, info = :info",
                      "ExpressionAttributeValues": {
                        ":fechaModificacion": {
                          "S": "{% $now() %}"
                        },
                        ":info": {
                          "M": "{% $states.input %}"
                        }
                      }
                    },
                    "End": true
                  }
                }
              },
              {
                "StartAt": "Parse Image List",
                "States": {
                  "Parse Image List": {
                    "Type": "Pass",
                    "Output": "{% $states.input.senData.props.pageProps.resource.data.parliamentarianSenadoData.data[0].[\n    $append(\n        $append(\n            $exists(IMAGEN) ? {\n                \"Id\": $join( [$parSlug, \"_\", \"DEFAULT\"] ),\n                \"MessageBody\": {\n                    \"slug\": $parSlug,\n                    \"tipo\": \"DEFAULT\",\n                    \"url\": IMAGEN\n                },\n                \"MessageGroupId\": $join( [$parSlug, \"_DEFAULT\"] )\n            } : [],\n            $exists(IMAGEN_120) ? {\n                \"Id\": $join( [$parSlug, \"_120\"] ),\n                \"MessageBody\": {\n                    \"slug\": $parSlug,\n                    \"tipo\": \"120\",\n                    \"url\": IMAGEN_120\n                },\n                \"MessageGroupId\": $join( [$parSlug, \"_120\"] )\n            } : []\n        ),\n        $append(\n            $exists(IMAGEN_450) ? {\n                \"Id\": $join( [$parSlug, \"_450\"] ),\n                \"MessageBody\": {\n                    \"slug\": $parSlug,\n                    \"tipo\": \"450\",\n                    \"url\": IMAGEN_450\n                },\n                \"MessageGroupId\": $join( [$parSlug, \"_450\"] )\n            } : [],\n            $exists(IMAGEN_600) ? {\n                \"Id\": $join( [$parSlug, \"_600\"] ),\n                \"MessageBody\": {\n                    \"slug\": $parSlug,\n                    \"tipo\": \"600\",\n                    \"url\": IMAGEN_600\n                },\n                \"MessageGroupId\": $join( [$parSlug, \"_600\"] )\n            } : []\n        )\n    )\n] %}",
                    "Next": "Parlamentario download image SQS"
                  },
                  "Parlamentario download image SQS": {
                    "Type": "Task",
                    "Arguments": {
                      "Entries": "{% $states.input %}",
                      "QueueUrl": "${parlamentario_imagen_queue}",
                      "MessageGroupId": "{% $parSlug %}"
                    },
                    "Resource": "arn:aws:states:::aws-sdk:sqs:sendMessageBatch",
                    "End": true
                  }
                }
              }
            ],
            "End": true
          }
        }
      },
      "End": true,
      "MaxConcurrency": 1
    }
  }
}
