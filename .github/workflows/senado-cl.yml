name: Open Data Scraping Actions - senado.cl
on:
  push:
    branches: [ master ]
    paths:
      - 'package.json'
      - 'yarn.lock'
      - 'turbo.json'
      - 'senado.cl/**'
      - '.github/workflows/senado-cl.yml'
      - '!senado.cl/**/README.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      front: ${{ steps.changes.outputs.front }}
      iac: ${{ steps.changes.outputs.iac }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            front:
              - 'senado.cl/packages/front/**'
            iac:
              - '.github/workflows/senado-cl.yml'
              - 'senado.cl/packages/**'
              - 'senado.cl/iac/**'

  iac-artifacts:
    runs-on: ubuntu-latest
    needs: [ changes ]
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Yarn 4.6.0
        uses: threeal/setup-yarn-action@v2.0.0
        with:
          version: 4.6.0

      - name: Cache for turbo
        uses: rharkor/caching-for-turbo@v1.5

      - name: Install Dependencies
        run: |
          yarn install

      - name: Build distiller
        run: |
          yarn @senado.cl/distiller:build

      - name: Upload distiller
        uses: actions/upload-artifact@v4
        with:
          name: distiller-dist
          path: senado.cl/packages/distiller/dist

      - name: Package front webapp
        run: |
          yarn @senado.cl/front:build

      - name: Upload front-dist
        uses: actions/upload-artifact@v4
        with:
          name: front-dist
          path: senado.cl/packages/front/dist

      - name: Package distiller layer
        working-directory: senado.cl/packages/distiller
        run: |
          rm -rf /tmp/distiller-layer
          mkdir -p /tmp/distiller-layer/nodejs
          yarn clean
          yarn workspaces focus --production
          cp -r node_modules /tmp/distiller-layer/nodejs

      - name: Upload distiller-layer
        uses: actions/upload-artifact@v4
        with:
          name: distiller-layer
          path: /tmp/distiller-layer

  iac:
    runs-on: ubuntu-latest
    needs: [ changes, iac-artifacts ]
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: senado.cl/iac/package-lock.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.CDK_DEFAULT_REGION }}

      - name: Download artifact distiller-layer
        uses: actions/download-artifact@v4
        with:
          name: distiller-layer
          path: ~/artifact/distiller-layer

      - name: Download artifact distiller-dist
        uses: actions/download-artifact@v4
        with:
          name: distiller-dist
          path: ~/artifact/distiller-dist

#      - name: CDK deploy prepare
#        working-directory: ./senado.cl/iac
#        run: |
#          touch .env
#          echo "CDK_DEFAULT_ACCOUNT=${{ vars.CDK_DEFAULT_ACCOUNT }}" >> .env
#          npm install

      - name: CDK deploy
        working-directory: ./senado.cl/iac
        run: |
          npm install
          cdk deploy --require-approval never --all

      #- name: AWS CDK Actions
      #  uses: tj-actions/aws-cdk@v4
      #  with:
      #    cdk_subcommand: deploy
      #    cdk_extra_args: >-
      #      --require-approval never
      #    working_dir: ./senado.cl/iac
      #  env:
      #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #    AWS_DEFAULT_REGION: ${{ vars.CDK_DEFAULT_REGION }}

  front:
    runs-on: ubuntu-latest
    needs: [changes, iac, iac-artifacts]
    if: ${{ needs.changes.outputs.front == 'true' }}
    steps:
      - name: Download artifact front-dist
        uses: actions/download-artifact@v4
        with:
          name: front-dist
          path: ~/artifact/front-dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.CDK_DEFAULT_REGION }}

      - name: Deploy Admin SPA to S3
        run: aws s3 sync ~/artifact/front-dist s3://senado-admin.open-data.cl

      - name: Get AWS SSM Parameters
        uses: dkershner6/aws-ssm-getparameters-action@v2
        with:
          parameterPairs: "
            /openData/senadoCl/front/distributionId = DISTRIBUTION"
          withDecryption: "true"

      - name: Invalidate CloudFront Admin SPA
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.DISTRIBUTION }}
          PATHS: "/*"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.CDK_DEFAULT_REGION }}
