name: Open Data Scraping Actions - senado.cl
on:
  push:
    branches: [ master ]
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - 'turbo.json'
      - 'senado.cl/**'
      - '.github/workflows/senado-cl.yml'
      - '!senado.cl/**/README.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      admin-front: ${{ steps.changes.outputs.admin-front }}
      iac: ${{ steps.changes.outputs.iac }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            admin-front:
              - 'senado.cl/admin/front/**'
            iac:
              - '.github/workflows/senado-cl.yml'
              - 'senado.cl/libs/**'
              - 'senado.cl/distiller/**'
              - 'senado.cl/iac/**'

  iac-artifacts:
    runs-on: ubuntu-latest
    needs: [ changes ]
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache for turbo
        uses: rharkor/caching-for-turbo@v1.5

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Build distiller
        run: |
          pnpm @senado.cl/distiller:build

      - name: Package admin webapp
        run: |
          pnpm @senado.cl/admin:package

      - name: Upload distiller-dist
        uses: actions/upload-artifact@v4
        with:
          name: distiller-dist
          path: senado.cl/distiller/dist

      - name: Upload admin-dist
        uses: actions/upload-artifact@v4
        with:
          name: admin-dist
          path: senado.cl/admin/dist

  iac:
    runs-on: ubuntu-latest
    needs: [ changes, iac-artifacts ]
    if: ${{ needs.changes.outputs.iac == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: senado.cl/iac/package-lock.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.CDK_DEFAULT_REGION }}

      - name: Build artifact distiller-layer
        working-directory: ./senado.cl/libs/layers/distiller/nodejs
        run: |
          npm install --production

      - name: Download artifact distiller-dist
        uses: actions/download-artifact@v4
        with:
          name: distiller-dist
          path: ~/artifact/distiller-dist

      - name: Download artifact admin-dist
        uses: actions/download-artifact@v4
        with:
          name: admin-dist
          path: ~/artifact/admin-dist

#      - name: Get AWS SSM Parameters
#        uses: dkershner6/aws-ssm-getparameters-action@v2
#        with:
#          parameterPairs: "
#            /openData/senadoCl/admin/cognitoUserPool/id = USER_POOL_ID,
#            /openData/senadoCl/admin/cognitoUserPool/clientId = USER_POOL_CLIENT_ID"
#          withDecryption: "true"

#      - name: Create admin env file
#        working-directory: ./senado.cl/admin
#        run: |
#          touch .env.production
#          echo VITE_COGNITO_USER_POOL_ID=${{ env.USER_POOL_ID }} >> .env.production
#          echo VITE_COGNITO_USER_POOL_CLIENT_ID=${{ env.USER_POOL_CLIENT_ID }} >> .env.production
#          cat .env.production

#      - name: Upload admin-front build
#        if: ${{ needs.changes.outputs.admin-front == 'true' }}
#        uses: actions/upload-artifact@v4
#        with:
#          name: admin-front
#          path: senado.cl/admin/front/dist

      - name: CDK deploy prepare
        working-directory: ./senado.cl/iac
        run: |
          touch .env
          echo "CDK_DEFAULT_ACCOUNT=${{ vars.CDK_DEFAULT_ACCOUNT }}" >> .env
          npm install

      - name: AWS CDK Actions
        uses: tj-actions/aws-cdk@v4
        with:
          cdk_subcommand: deploy
          cdk_extra_args: >-
            --require-approval never
          working_dir: ./senado.cl/iac
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.CDK_DEFAULT_REGION }}

#      - name: CDK deploy
#        run: |
#          pnpm @senado.cl/iac:deploy

#  admin-front:
#    runs-on: ubuntu-latest
#    needs: [changes, infra]
#    if: ${{ needs.changes.outputs.admin-front == 'true' }}
#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v4
#        with:
#          name: admin-front
#          path: dist
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: 'us-east-1'
#
#      - name: Deploy Admin SPA to S3
#        run: aws s3 sync ./dist s3://senado-admin.open-data.cl
#
#      - name: Get AWS SSM Parameters
#        uses: dkershner6/aws-ssm-getparameters-action@v2
#        with:
#          parameterPairs: "
#            /openData/senadoCl/admin/distributionId = DISTRIBUTION"
#          withDecryption: "true"
#
#      - name: Invalidate CloudFront Admin SPA
#        uses: chetan/invalidate-cloudfront-action@v2
#        env:
#          DISTRIBUTION: ${{ env.DISTRIBUTION }}
#          PATHS: "/*"
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: 'us-east-1'
