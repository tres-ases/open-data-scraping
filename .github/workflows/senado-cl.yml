name: Open Data Scraping Actions - senado.cl
on:
  push:
    branches: [ master ]
    paths:
      - 'layers/**'
      - 'senado.cl/**'
      - '.github/workflows/senado-cl.yml'
      - '!**/README.md'

  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      admin-front: ${{ steps.changes.outputs.admin-front }}
      infra: ${{ steps.changes.outputs.infra }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            admin-front:
              - 'senado.cl/admin/front/**'
            infra:
              - 'senado.cl/**'
              - 'layers/**'

  infra:
    runs-on: ubuntu-latest
    needs: [ changes ]
    if: ${{ needs.changes.outputs.infra == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Cache for turbo
        uses: rharkor/caching-for-turbo@v1.5

      - name: Install dependencies
        run: |
          pnpm install

      - name: Build Layers
        run: |
          pnpm layers:build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Get AWS SSM Parameters
        uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: "
            /openData/senadoCl/admin/cognitoUserPool/id = USER_POOL_ID,
            /openData/senadoCl/admin/cognitoUserPool/clientId = USER_POOL_CLIENT_ID"
          withDecryption: "true"

      - name: 'Create admin env file'
        working-directory: ./senado.cl/admin/front
        run: |
          touch .env.production
          echo VITE_COGNITO_USER_POOL_ID=${{ env.USER_POOL_ID }} >> .env.production
          echo VITE_COGNITO_USER_POOL_CLIENT_ID=${{ env.USER_POOL_CLIENT_ID }} >> .env.production
          cat .env.production

      - name: Build SRC
        run: |
          pnpm @senado.cl/global:build
          pnpm @senado.cl/global:package
          pnpm @senado.cl/packages:build
          pnpm @senado.cl/packages:package
          pnpm @senado.cl/admin-front:build
          pnpm @senado.cl/admin-api:build

      - name: Upload admin-front build
        if: ${{ needs.changes.outputs.admin-front == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: admin-front
          path: senado.cl/admin/front/dist

      - run: pnpm cdk deploy --require-approval never
        working-directory: ./senado.cl/iac

  admin-front:
    runs-on: ubuntu-latest
    needs: [changes, infra]
    if: ${{ needs.changes.outputs.admin-front == 'true' }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: admin-front
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Deploy Admin SPA to S3
        run: aws s3 sync ./dist s3://senado-admin.open-data.cl

      - name: Get AWS SSM Parameters
        uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: "
            /openData/senadoCl/admin/distributionId = DISTRIBUTION"
          withDecryption: "true"

      - name: Invalidate CloudFront Admin SPA
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.DISTRIBUTION }}
          PATHS: "/*"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
